# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.producer.ProducerConfig for more details

############################# Producer Basics #############################

# list of brokers used for bootstrapping knowledge about the rest of the cluster
# format: host1:port1,host2:port2 ...
metadata.broker.list=dp08:9092,dp10:9092,dp11:9092

#This value controls when a produce request is considered completed. 
#Specifically, how many other brokers must have committed the data to their log and acknowledged this to the leader? 
request.required.acks=1

#The amount of time the broker will wait trying to meet the request.required.acks requirement 
#before sending back an error to the client.
request.timeout.ms=10000

# name of the partitioner class for partitioning events; default partition spreads data randomly
partitioner.class=myxof.git.kafka.KafkaProducerPartition

# specifies whether the messages are sent asynchronously (async) or synchronously (sync)
producer.type=async

# specify the compression codec for all data generated: none, gzip, snappy, lz4.
# the old config values work as well: 0, 1, 2, 3 for none, gzip, snappy, lz4, respectively
compression.codec=none

# message encoder
serializer.class=kafka.serializer.StringEncoder

# allow topic level compression
#compressed.topics=

############################# Async Producer #############################
# maximum time, in milliseconds, for buffering data on the producer queue 
queue.buffering.max.ms=5000

# the maximum size of the blocking queue for buffering on the producer 
queue.buffering.max.messages=10000

# Timeout for event enqueue:
# 0: events will be enqueued immediately or dropped if the queue is full
# -ve: enqueue will block indefinitely if the queue is full
# +ve: enqueue will block up to this many milliseconds if the queue is full
queue.enqueue.timeout.ms=-1

# the number of messages batched at the producer 
batch.num.messages=200

#Socket write buffer size
send.buffer.bytes=1024000